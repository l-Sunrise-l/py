# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z0FpopnfDDzfDkLOJ2KXa0x7DcmuOfjT

##Задача 1. Сессия
Внутри папки 02_sessionэтой папки создайте питоновский файл main.py и решите здесь задачу из четвёртого урока данного модуля. Вот текст самой задачи:

Для сдачи зачёта студент Пётр написал программу, которая по координатам двух точек определяет уравнение прямой, проходящей через эти две точки в виде y = k*x +b, где k и b - числа, означающие угловой коэффициент и вертикальное смещение прямой. Вот текст этой программы:

```python
print("Введите первую точку")
x1 = float(input('X: '))
y1 = float(input('Y: '))
print("\nВведите вторую точку")
x2 = float(input('X: '))
y2 = float(input('Y: '))

x_diff = x1 - x2
y_diff = y1 - y2
k = y_diff / x_diff
b = y2 - k * x2

print("Уравнение прямой, проходящей через эти точки:")
print("y = ", k, " * x + ", b)
```

####Пример работы программы (содержимое консоли):
````
Введите первую точку
X: 10
Y: 20

Введите вторую точку
X: 15
Y: 25
Уравнение прямой, проходящей через эти точки:
y =  1.0  * x +  10.0
````
Однако, вечером накануне сдачи Пётр обнаружил, что программа не всегда работает правильно. Например, она не выдаёт корректного уравнения, если координаты первой точки равны (10, 20), а координаты второй точки равны (10, 45). Отчаявшись и предвидя бессонную ночь, Пётр обратился к вам за помощью. Помогите ему найти и исправить ошибку в коде с помощью брейкпоинтов, чтобы уравнение прямой составлялось правильно во всех случаях.

# Решение:
"""

print("Введите первую точку")
x1 = float(input('X: '))
y1 = float(input('Y: '))
print("\nВведите вторую точку")
x2 = float(input('X: '))
y2 = float(input('Y: '))
if x1 != x2 and y1 != y2:
    x_diff = x1 - x2
    y_diff = y1 - y2
    k = y_diff / x_diff
    b = y2 - k * x2

    print("Уравнение прямой, проходящей через эти точки:")
    print("y = ", k, " * x + ", b)
else:
    print('Ошибка невозможно составить уравнение прямой для этих координат.')

"""##Задача 2. Сумма и разность
Напишите две функции: первая принимает одно целое положительное число N и находит сумму всех цифр этого числа; вторая - принимает число N и считает количество цифр в числе. В ответе выводится разность суммы чисел и количества

# Решение:
"""

number = input('Введите число: ')


def summ(number):
    summ = 0
    for counter in number:
        summ += int(counter)
    return summ


def quantity(number):
    quantity = 0
    for counter in number:
        quantity += 1
    return quantity


summ = summ(number)
quantity = quantity(number)
print('Сумма цифр:', summ)
print('Кол-во цифр в числе:', quantity)
print('Разность суммы и кол-ва цифр:', abs(summ - quantity))

"""##Задача 3. Число наоборот 3
Пользователь вводит два вещественных числа - N и K. Напишите программу, которая отдельно заменяет сначала целую часть на число, которое получается из исходного записью его цифр в обратном порядке, затем то же самое делает с дробной частью. После этого числа складываются и сумма выводится на экран.

# Решение:
"""

number_1 = input('Введите первое число: ')
number_2 = input('Введите второе число: ')


def versa(number_1):
    number_3 = ''
    number_3_1 = ''
    number_5 = 0
    for counter in number_1:
        if counter != '.' and number_5 == 0:
            number_3 = counter + number_3
        elif counter == '.':
            number_3 += '.'
            number_5 = 1
        else:
            number_3_1 = counter + number_3_1
    number_3 += number_3_1
    return number_3


number_3 = versa(number_1)
number_4 = versa(number_2)
print('Первое число наоборот:', number_3)
print('Второе число наоборот:', number_4)
print('Сумма:', float(number_3) + float(number_4))

"""##Задача 4. Наименьший делитель
Дано натуральное число n>1. Напишите функцию, которая находит его наименьший делитель, отличный от 1.

# Решение:
"""

number = int(input('Введите число: '))
counter = 2


def minn(number, counter):
    while number % counter != 0:
        counter += 1
    return counter


print('Наименьший делитель, отличный от единицы:', minn(number, counter))

"""##Задача 5. Монетка 2
Практиканту снова дали задание найти старую металлическую монетку по заданным координатам. Но теперь металлоискатель сканирует местность вокруг пользователя в виде круга и при обнаружении/отсутствии металла прибор отображает на экране соответствующее сообщение.

Даны два действительных числа x и y и радиус r. Напишите функцию, которая проверяет, лежит ли точка с координатами (x,y) внутри круга с радиусом r (включая его границу). Координаты центра круга - (0, 0). Если точка принадлежит кругу, выведите сообщение “Монетка где-то рядом”, иначе выведите сообщение “Монетки в области нет”.

# Решение:
"""

def money(number_1, number_2, radius):
    if (abs(number_1) ** 2 + abs(number_2) ** 2) ** 0.5 <= radius:
        print('Монетка где-то рядом')
    else:
        print('Монетки в области нет')


print('Введите координаты монетки:')
number_1 = float(input('X: '))
number_2 = float(input('Y: '))
radius = float(input('Введите радиус: '))

money(number_1, number_2, radius)

"""##Задача 6. Года

Недавно Костя прочитал какую-то научно-фантастическую книжку, где самые страшные события случались только в определённые года, а именно - когда в году были ровно три одинаковые цифры. Косте стало интересно какие года были или будут “особенными” в определённом промежутке.

Напишите программу, в которой у пользователя запрашивается два четырёхзначных числа A и B. Затем выведите в порядке возрастания все четырёхзначные числа в интервале от A до B, запись которых содержит ровно три одинаковые цифры.

# Решение:
"""

number = int(input('Введите первый год: '))
number_5 = int(input('Введите второй год: '))
print('Годы от', number, 'до', number_5, 'с тремя одинаковыми цифрами: ')
for counter in range(number, number_5 + 1):
    number_1 = counter % 10
    number_2 = counter // 10 % 10
    number_3 = counter // 100 % 10
    number_4 = counter // 1000 % 10
    if number_1 == number_2 == number_3:
        print(counter)
    elif number_1 == number_2 == number_4:
        print(counter)
    elif number_1 == number_4 == number_3:
        print(counter)
    elif number_4 == number_2 == number_3:
        print(counter)